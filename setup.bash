#!/usr/bin/env bash
# This file is generated! Edit setup-script.bash instead. See README for more details.

# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)     machine=Linux;;
    Darwin*)    machine=Mac;;
    CYGWIN*)    machine=Windows;;
    MINGW*)     machine=Windows;;
    *)          machine="UNKNOWN:${unameOut}"
esac


echo "Alloverse app setup wizard"
echo "--------------------------"

if [ -d "allo" ]; then
    echo "Project already initialized; use \`./allo/assist upgrade\` to fetch latest version."
    exit
fi

PROJNAME=`basename $(pwd)`

read -p "Create new project '$PROJNAME'? (y/N) " answer
if [ "$answer" != "y" ] ; then
    echo "Exiting..."
    exit
fi

if [ ! -d ".git" ]; then
    echo "git init'ing"
    git init
fi

echo
echo "EXTRACTING template app..."

if [[ "$machine" == "Windows" ]]
then
    baseargs="-d"
else
    baseargs="-D"
fi
base64 $baseargs <<EOF | tar xz
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
EOF

sed -i".bak" "s#__PROJNAME__#${PROJNAME}#g" lua/main.lua
rm lua/main.lua.bak

echo
echo "FETCHING git dependencies..."

mkdir -p allo/deps
git submodule add https://github.com/alloverse/alloui-lua allo/deps/alloui
git submodule update --init --recursive allo/deps/alloui
git submodule add https://github.com/luapower/luajit.git allo/deps/luajit-bin

echo
echo "DOWNLOADING libraries using assist..."

./allo/assist upgrade
