#!/usr/bin/env bash
# This file is generated! Edit setup-script.bash instead. See README for more details.

# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)     machine=Linux;;
    Darwin*)    machine=Mac;;
    CYGWIN*)    machine=Windows;;
    MINGW*)     machine=Windows;;
    *)          machine="UNKNOWN:${unameOut}"
esac


echo "Alloverse app setup wizard"
echo "--------------------------"

if [ -d "allo" ]; then
    echo "Project already initialized; use \`./allo/assist upgrade\` to fetch latest version."
    exit
fi

PROJNAME=`basename $(pwd)`

read -p "Create new project '$PROJNAME'? (y/N) " answer
if [ "$answer" != "y" ] ; then
    echo "Exiting..."
    exit
fi

if [ ! -d ".git" ]; then
    echo "git init'ing"
    git init
fi

echo
echo "EXTRACTING template app..."

if [[ "$machine" == "Mac" ]]
then
    baseargs="-D"
else
    baseargs="-d"
fi
base64 $baseargs <<EOF | tar xz
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
EOF

sed -i".bak" "s#__PROJNAME__#${PROJNAME}#g" lua/main.lua
rm lua/main.lua.bak

echo
echo "FETCHING git dependencies..."

mkdir -p allo/deps
git submodule add https://github.com/alloverse/alloui-lua allo/deps/alloui
git submodule update --init --recursive allo/deps/alloui
git submodule add https://github.com/luapower/luajit.git allo/deps/luajit-bin

echo
echo "DOWNLOADING libraries using assist..."

./allo/assist upgrade
