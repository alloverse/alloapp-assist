#!/usr/bin/env bash

# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)     machine=Linux;;
    Darwin*)    machine=Mac;;
    CYGWIN*)    machine=Windows;;
    MINGW*)     machine=Windows;;
    *)          machine="UNKNOWN:${unameOut}"
esac


echo "Alloverse app setup wizard"
echo "--------------------------"

if [ -d "allo" ]; then
    echo "Project already initialized; use \`./allo/assist upgrade\` to fetch latest version."
    exit
fi

PROJNAME=`basename $(pwd)`

read -p "Create new project '$PROJNAME'? (y/N) " answer
if [ "$answer" != "y" ] ; then
    echo "Exiting..."
    exit
fi

if [ ! -d ".git" ]; then
    echo "git init'ing"
    git init
fi

echo
echo "EXTRACTING template app..."

if [[ "$machine" == "Windows" ]]
then
    baseargs="-d"
else
    baseargs="-D"
fi
base64 $baseargs <<EOF | tar xz
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
EOF

sed -i".bak" "s#__PROJNAME__#${PROJNAME}#g" lua/main.lua
rm lua/main.lua.bak

echo
echo "FETCHING git dependencies..."

mkdir -p allo/deps
git submodule add https://github.com/alloverse/alloui-lua allo/deps/alloui
git submodule update --init --recursive allo/deps/alloui
git submodule add https://github.com/luapower/luajit.git allo/deps/luajit-bin

echo
echo "DOWNLOADING libraries using assist..."

./allo/assist upgrade
