#!/usr/bin/env bash

# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)     machine=Linux;;
    Darwin*)    machine=Mac;;
    CYGWIN*)    machine=Windows;;
    MINGW*)     machine=Windows;;
    *)          machine="UNKNOWN:${unameOut}"
esac


echo "Alloverse app setup wizard"
echo "--------------------------"

if [ -d "allo" ]; then
    echo "Project already initialized; use \`./allo/assist upgrade\` to fetch latest version."
    exit
fi

PROJNAME=`basename $(pwd)`

read -p "Create new project '$PROJNAME'? (y/N) " answer
if [ "$answer" != "y" ] ; then
    echo "Exiting..."
    exit
fi

if [ ! -d ".git" ]; then
    echo "git init'ing"
    git init
fi

echo
echo "EXTRACTING template app..."

if [[ "$machine" == "Windows" ]]
then
    baseargs="-d"
else
    baseargs="-D"
fi
base64 $baseargs <<EOF | tar xz
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
EOF

sed -i".bak" "s#__PROJNAME__#${PROJNAME}#g" lua/main.lua
rm lua/main.lua.bak

echo
echo "FETCHING git dependencies..."

mkdir -p allo/deps
git submodule add https://github.com/alloverse/alloui-lua allo/deps/alloui
git submodule update --init --recursive allo/deps/alloui
git submodule add https://github.com/luapower/luajit.git allo/deps/luajit-bin

echo
echo "DOWNLOADING libraries using assist..."

./allo/assist upgrade
